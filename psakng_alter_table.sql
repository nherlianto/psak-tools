ALTER TABLE PSAKTMJR DROP COLUMN TMJRID;
ALTER TABLE PSAKTMJR ADD TMJRID VARCHAR(48);
UPDATE PSAKTMJR set TMJRID=regexp_replace(rawtohex(sys_guid()), '([A-F0-9]{8})([A-F0-9]{4})([A-F0-9]{4})([A-F0-9]{4})([A-F0-9]{12})', '\1-\2-\3-\4-\5');
DROP SEQUENCE TMJRSEQ;
COMMIT;


ALTER TABLE L2PSAK DROP COLUMN SEQNO;
ALTER TABLE L2PSAK ADD SEQNO VARCHAR(48);
UPDATE L2PSAK set SEQNO=regexp_replace(rawtohex(sys_guid()), '([A-F0-9]{8})([A-F0-9]{4})([A-F0-9]{4})([A-F0-9]{4})([A-F0-9]{12})', '\1-\2-\3-\4-\5');
DROP SEQUENCE L2PSAKSEQ;
COMMIT;


ALTER TABLE ACC_LOAN_SCHDL DROP COLUMN SEQ_NO;
ALTER TABLE ACC_LOAN_SCHDL ADD SEQ_NO VARCHAR(48);
UPDATE ACC_LOAN_SCHDL set SEQ_NO=regexp_replace(rawtohex(sys_guid()), '([A-F0-9]{8})([A-F0-9]{4})([A-F0-9]{4})([A-F0-9]{4})([A-F0-9]{12})', '\1-\2-\3-\4-\5');
DROP SEQUENCE SCHSEQ;
COMMIT;


ALTER TABLE HS_LOAN_SCHDL DROP COLUMN SEQ_NO;
ALTER TABLE HS_LOAN_SCHDL ADD SEQ_NO VARCHAR(48);
UPDATE HS_LOAN_SCHDL set SEQ_NO=regexp_replace(rawtohex(sys_guid()), '([A-F0-9]{8})([A-F0-9]{4})([A-F0-9]{4})([A-F0-9]{4})([A-F0-9]{12})', '\1-\2-\3-\4-\5');
DROP SEQUENCE HSSCHSEQ;
COMMIT;


ALTER TABLE INCOME_EXPENSES DROP COLUMN IE_SEQ;
ALTER TABLE INCOME_EXPENSES ADD IE_SEQ VARCHAR(48);
UPDATE INCOME_EXPENSES set IE_SEQ=regexp_replace(rawtohex(sys_guid()), '([A-F0-9]{8})([A-F0-9]{4})([A-F0-9]{4})([A-F0-9]{4})([A-F0-9]{12})', '\1-\2-\3-\4-\5');
DROP SEQUENCE IESEQ;

COMMIT;


ALTER TABLE REPORT_BRANCH DROP COLUMN REPORT_BRANCH_ID;
ALTER TABLE REPORT_BRANCH ADD REPORT_BRANCH_ID VARCHAR(48);
UPDATE REPORT_BRANCH set REPORT_BRANCH_ID=regexp_replace(rawtohex(sys_guid()), '([A-F0-9]{8})([A-F0-9]{4})([A-F0-9]{4})([A-F0-9]{4})([A-F0-9]{12})', '\1-\2-\3-\4-\5');
DROP SEQUENCE RPTBRCHSEQ;
COMMIT;




ALTER TABLE ACC_AMORTIZE DROP COLUMN CKPN;
ALTER TABLE ACC_AMORTIZE RENAME COLUMN VALID_DATE TO VALID_DATE2;
ALTER TABLE ACC_AMORTIZE ADD  VALID_DATE NUMBER(8,0);
UPDATE ACC_AMORTIZE SET VALID_DATE=
(
  CASE WHEN valid_date2 IS NULL THEN 
    0 
  ELSE
    to_number(valid_date2)
  END
);

ALTER TABLE ACC_AMORTIZE DROP COLUMN VALID_DATE2;

COMMIT;


ALTER TABLE ACC_LOAN RENAME COLUMN END_DATE TO END_DATE2;
ALTER TABLE ACC_LOAN ADD  END_DATE NUMBER(8,0);
UPDATE ACC_LOAN SET END_DATE=
(
  CASE WHEN END_DATE2 IS NULL THEN 
    0 
  ELSE
    to_number(END_DATE2)
  END
);
COMMIT;

ALTER TABLE ACC_LOAN DROP COLUMN END_DATE2;



ALTER TABLE HS_ACC_LOAN RENAME COLUMN END_DATE TO END_DATE2;
ALTER TABLE HS_ACC_LOAN ADD  END_DATE NUMBER(8,0);
UPDATE HS_ACC_LOAN SET END_DATE=
(
  CASE WHEN END_DATE2 IS NULL THEN 
    0 
  ELSE
    to_number(END_DATE2)
  END
);
COMMIT;


ALTER TABLE HS_ACC_LOAN DROP COLUMN END_DATE2;




ALTER TABLE PSAKTMJR MODIFY TJGLCD VARCHAR(20);
ALTER TABLE MD_COA MODIFY COA_CODE VARCHAR(20);
COMMIT;

ALTER TABLE MD_BRANCH ADD BRANCH_LEVEL2 NUMBER(2,0);
UPDATE MD_BRANCH SET BRANCH_LEVEL2=BRANCH_LEVEL;
ALTER TABLE MD_BRANCH DROP COLUMN BRANCH_LEVEL;
ALTER TABLE MD_BRANCH ADD BRANCH_LEVEL NUMBER(2,0);
UPDATE MD_BRANCH SET BRANCH_LEVEL=BRANCH_LEVEL2;
ALTER TABLE MD_BRANCH DROP COLUMN BRANCH_LEVEL2;
COMMIT;

--MD_GLIE
ALTER TABLE MD_GLIE MODIFY TMP_COA_NUMBER VARCHAR(20);
ALTER TABLE MD_GLIE MODIFY COA_NUMBER VARCHAR(20);


--MD_PRODUCT
ALTER TABLE MD_PRODUCT MODIFY GL_INC_AMORTIZE_DEBIT VARCHAR(20);
ALTER TABLE MD_PRODUCT MODIFY GL_INC_AMORTIZE_CREDIT VARCHAR(20);


ALTER TABLE MD_PRODUCT MODIFY GL_EXP_AMORTIZE_DEBIT VARCHAR(20);
ALTER TABLE MD_PRODUCT MODIFY GL_EXP_AMORTIZE_CREDIT VARCHAR(20);


ALTER TABLE MD_PRODUCT MODIFY GL_UMRATE_DEBIT VARCHAR(20);
ALTER TABLE MD_PRODUCT MODIFY GL_UMRATE_CREDIT VARCHAR(20);


ALTER TABLE MD_PRODUCT MODIFY GL_DELTA_DEBIT VARCHAR(20);
ALTER TABLE MD_PRODUCT MODIFY GL_DELTA_CREDIT VARCHAR(20);


ALTER TABLE MD_PRODUCT MODIFY GL_CKPN_INDIVIDUAL_DB VARCHAR(20);
ALTER TABLE MD_PRODUCT MODIFY GL_CKPN_INDIVIDUAL_CR VARCHAR(20);

ALTER TABLE MD_PRODUCT MODIFY GL_CKPN_COLLECTIVE_DB VARCHAR(20);
ALTER TABLE MD_PRODUCT MODIFY GL_CKPN_COLLECTIVE_CR VARCHAR(20);

ALTER TABLE MD_PRODUCT MODIFY GL_UNWINDING_INDIVIDUAL_DB VARCHAR(20);
ALTER TABLE MD_PRODUCT MODIFY GL_UNWINDING_INDIVIDUAL_CR VARCHAR(20);


ALTER TABLE MD_PRODUCT MODIFY GL_UNWINDING_COLLECTIVE_DB VARCHAR(20);
ALTER TABLE MD_PRODUCT MODIFY GL_UNWINDING_COLLECTIVE_CR VARCHAR(20);



ALTER TABLE MD_PRODUCT MODIFY GL_REV_CKPN_INDIVIDUAL_DB VARCHAR(20);
ALTER TABLE MD_PRODUCT MODIFY GL_REV_CKPN_INDIVIDUAL_CR VARCHAR(20);


ALTER TABLE MD_PRODUCT MODIFY GL_REV_CKPN_COLLECTIVE_DB VARCHAR(20);
ALTER TABLE MD_PRODUCT MODIFY GL_REV_CKPN_COLLECTIVE_CR VARCHAR(20);


ALTER TABLE MD_PRODUCT MODIFY GL_CKPN_COLLECTIVE_STG1_DB VARCHAR(20);
ALTER TABLE MD_PRODUCT MODIFY GL_CKPN_COLLECTIVE_STG1_CR VARCHAR(20);

ALTER TABLE MD_PRODUCT MODIFY GL_REV_CKPN_COLLECTIVE_STG1_DB VARCHAR(20);
ALTER TABLE MD_PRODUCT MODIFY GL_REV_CKPN_COLLECTIVE_STG1_CR VARCHAR(20);


ALTER TABLE MD_PRODUCT MODIFY GL_CKPN_COLLECTIVE_STG2_DB VARCHAR(20);
ALTER TABLE MD_PRODUCT MODIFY GL_CKPN_COLLECTIVE_STG2_CR VARCHAR(20);


ALTER TABLE MD_PRODUCT MODIFY GL_REV_CKPN_COLLECTIVE_STG2_DB VARCHAR(20);
ALTER TABLE MD_PRODUCT MODIFY GL_REV_CKPN_COLLECTIVE_STG2_CR VARCHAR(20);


ALTER TABLE MD_PRODUCT MODIFY GL_CKPN_COLLECTIVE_STG3_DB VARCHAR(20);
ALTER TABLE MD_PRODUCT MODIFY GL_CKPN_COLLECTIVE_STG3_CR VARCHAR(20);


ALTER TABLE MD_PRODUCT MODIFY GL_REV_CKPN_COLLECTIVE_STG3_DB VARCHAR(20);
ALTER TABLE MD_PRODUCT MODIFY GL_REV_CKPN_COLLECTIVE_STG3_CR VARCHAR(20);


ALTER TABLE MD_PRODUCT MODIFY GL_CKPN_RES_INT_DB VARCHAR(20);
ALTER TABLE MD_PRODUCT MODIFY GL_CKPN_RES_INT_CR VARCHAR(20);


ALTER TABLE MD_PRODUCT MODIFY GL_REV_CKPN_RES_INT_DB VARCHAR(20);
ALTER TABLE MD_PRODUCT MODIFY GL_REV_CKPN_RES_INT_CR VARCHAR(20);


COMMIT;




--SA_PRODUCT
ALTER TABLE SA_PRODUCT MODIFY GL_INC_AMORTIZE_DEBIT VARCHAR(20);
ALTER TABLE SA_PRODUCT MODIFY GL_INC_AMORTIZE_CREDIT VARCHAR(20);


ALTER TABLE SA_PRODUCT MODIFY GL_EXP_AMORTIZE_DEBIT VARCHAR(20);
ALTER TABLE SA_PRODUCT MODIFY GL_EXP_AMORTIZE_CREDIT VARCHAR(20);


ALTER TABLE SA_PRODUCT MODIFY GL_UMRATE_DEBIT VARCHAR(20);
ALTER TABLE SA_PRODUCT MODIFY GL_UMRATE_CREDIT VARCHAR(20);


ALTER TABLE SA_PRODUCT MODIFY GL_DELTA_DEBIT VARCHAR(20);
ALTER TABLE SA_PRODUCT MODIFY GL_DELTA_CREDIT VARCHAR(20);


ALTER TABLE SA_PRODUCT MODIFY GL_CKPN_INDIVIDUAL_DB VARCHAR(20);
ALTER TABLE SA_PRODUCT MODIFY GL_CKPN_INDIVIDUAL_CR VARCHAR(20);

ALTER TABLE SA_PRODUCT MODIFY GL_CKPN_COLLECTIVE_DB VARCHAR(20);
ALTER TABLE SA_PRODUCT MODIFY GL_CKPN_COLLECTIVE_CR VARCHAR(20);

ALTER TABLE SA_PRODUCT MODIFY GL_UNWINDING_INDIVIDUAL_DB VARCHAR(20);
ALTER TABLE SA_PRODUCT MODIFY GL_UNWINDING_INDIVIDUAL_CR VARCHAR(20);


ALTER TABLE SA_PRODUCT MODIFY GL_UNWINDING_COLLECTIVE_DB VARCHAR(20);
ALTER TABLE SA_PRODUCT MODIFY GL_UNWINDING_COLLECTIVE_CR VARCHAR(20);



ALTER TABLE SA_PRODUCT MODIFY GL_REV_CKPN_INDIVIDUAL_DB VARCHAR(20);
ALTER TABLE SA_PRODUCT MODIFY GL_REV_CKPN_INDIVIDUAL_CR VARCHAR(20);


ALTER TABLE SA_PRODUCT MODIFY GL_REV_CKPN_COLLECTIVE_DB VARCHAR(20);
ALTER TABLE SA_PRODUCT MODIFY GL_REV_CKPN_COLLECTIVE_CR VARCHAR(20);


ALTER TABLE SA_PRODUCT MODIFY GL_CKPN_COLLECTIVE_STG1_DB VARCHAR(20);
ALTER TABLE SA_PRODUCT MODIFY GL_CKPN_COLLECTIVE_STG1_CR VARCHAR(20);

ALTER TABLE SA_PRODUCT MODIFY GL_REV_CKPN_COLLECTIVE_STG1_DB VARCHAR(20);
ALTER TABLE SA_PRODUCT MODIFY GL_REV_CKPN_COLLECTIVE_STG1_CR VARCHAR(20);


ALTER TABLE SA_PRODUCT MODIFY GL_CKPN_COLLECTIVE_STG2_DB VARCHAR(20);
ALTER TABLE SA_PRODUCT MODIFY GL_CKPN_COLLECTIVE_STG2_CR VARCHAR(20);


ALTER TABLE SA_PRODUCT MODIFY GL_REV_CKPN_COLLECTIVE_STG2_DB VARCHAR(20);
ALTER TABLE SA_PRODUCT MODIFY GL_REV_CKPN_COLLECTIVE_STG2_CR VARCHAR(20);


ALTER TABLE SA_PRODUCT MODIFY GL_CKPN_COLLECTIVE_STG3_DB VARCHAR(20);
ALTER TABLE SA_PRODUCT MODIFY GL_CKPN_COLLECTIVE_STG3_CR VARCHAR(20);


ALTER TABLE SA_PRODUCT MODIFY GL_REV_CKPN_COLLECTIVE_STG3_DB VARCHAR(20);
ALTER TABLE SA_PRODUCT MODIFY GL_REV_CKPN_COLLECTIVE_STG3_CR VARCHAR(20);


ALTER TABLE SA_PRODUCT MODIFY GL_CKPN_RES_INT_DB VARCHAR(20);
ALTER TABLE SA_PRODUCT MODIFY GL_CKPN_RES_INT_CR VARCHAR(20);


ALTER TABLE SA_PRODUCT MODIFY GL_REV_CKPN_RES_INT_DB VARCHAR(20);
ALTER TABLE SA_PRODUCT MODIFY GL_REV_CKPN_RES_INT_CR VARCHAR(20);


COMMIT;

ALTER TABLE PSAKTMJR DROP COLUMN TJGLDK;


ALTER TABLE MD_FACILITY MODIFY FACILITY_TYPE VARCHAR (10);
ALTER TABLE MD_FACILITY MODIFY REGION_CODE VARCHAR (5);


ALTER TABLE PSAKTMJR MODIFY TJKDWL VARCHAR (5);
ALTER TABLE ACC_LOAN MODIFY REGION_CODE VARCHAR (5);
ALTER TABLE ACC_LOAN MODIFY FACILITY_TYPE VARCHAR (10);
ALTER TABLE HS_ACC_LOAN MODIFY REGION_CODE VARCHAR (5);
ALTER TABLE HS_ACC_LOAN MODIFY FACILITY_TYPE VARCHAR (5);


ALTER TABLE MD_BRANCH MODIFY REGION_CODE VARCHAR (5);
ALTER TABLE TRX_LOAN MODIFY REGION_CODE VARCHAR (5);

ALTER TABLE MD_LOAN_TYPE MODIFY PRODUCT_CODE  VARCHAR(10);
ALTER TABLE MD_LOAN_PRK MODIFY PRODUCT_CODE  VARCHAR(10);
ALTER TABLE MD_PRODUCT MODIFY PRODUCT_CODE  VARCHAR(10);
ALTER TABLE PSAKTMJR MODIFY TJPRCD  VARCHAR(10);
ALTER TABLE ACC_LOAN MODIFY PRODUCT_CODE  VARCHAR(10);
ALTER TABLE HS_ACC_LOAN MODIFY PRODUCT_CODE  VARCHAR(10);
ALTER TABLE TRX_DRAWDOWN MODIFY PRODUCT_CODE VARCHAR (10);
ALTER TABLE TRX_LOAN MODIFY PRODUCT_CODE VARCHAR (10);


ALTER TABLE MD_COA MODIFY PARENT_CODE  VARCHAR(20);
ALTER TABLE MD_BASE_RATE MODIFY RATE_NAME VARCHAR(100);




-- create table tmp_mdglie
CREATE TABLE TMP_MD_GLIE(	
	"IE_CODE" VARCHAR2(2) NOT NULL ENABLE, 
	"PRODUCT_CODE" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	"LEVEL_TYPE" VARCHAR2(1 BYTE) NOT NULL ENABLE, 
	"TMP_COA_NUMBER" VARCHAR2(20 BYTE), 
	"COA_NUMBER" VARCHAR2(20 BYTE), 
	"DESCRIPTION" VARCHAR2(50 BYTE)) ;


DROP TABLE MD_GLIE;

-- create table tmp_mdglie
CREATE TABLE MD_GLIE(	
	"IE_CODE" VARCHAR2(2) NOT NULL ENABLE, 
	"PRODUCT_CODE" VARCHAR2(20) NOT NULL ENABLE,
	"LEVEL_TYPE" VARCHAR2(1) NOT NULL ENABLE	,  
	"TMP_COA_NUMBER" VARCHAR2(20), 
	"COA_NUMBER" VARCHAR2(20), 
	"DESCRIPTION" VARCHAR2(50) ,
   "IE_TYPE" VARCHAR(1) NOT NULL DEFAULT '-'
) ;




ALTER TABLE MD_FACILITY_TYPE MODIFY PRODUCT_CODE VARCHAR(10);
ALTER TABLE MD_FACILITY_TYPE MODIFY PRODUCT_NAME VARCHAR(50);



ALTER TABLE MD_LOAN_TYPE MODIFY PRODUCT_NAME VARCHAR(50);


ALTER TABLE TRX_LOAN MODIFY LOAN_HOLDER varchar2(50);


ALTER TABLE INCOME_EXPENSES ADD LEVEL_TYPE varchar2(1) default 'L';


ALTER TABLE ACC_LOAN MODIFY LOAN_PROCESSING VARCHAR(3);
ALTER TABLE HS_ACC_LOAN MODIFY LOAN_PROCESSING VARCHAR(3);
ALTER TABLE TRX_LOAN MODIFY LOAN_PROCESSING VARCHAR(3);
ALTER TABLE TMP_LLOAN MODIFY L0LNPR VARCHAR(3);

UPDATE ACC_LOAN SET LOAN_PROCESSING='PRK' WHERE LOAN_PROCESSING='P';
UPDATE HS_ACC_LOAN SET LOAN_PROCESSING='PRK' WHERE LOAN_PROCESSING='P';

ALTER TABLE ACC_FACILITY ADD CURRENCY_CODE VARCHAR(3);


COMMIT;